Special characters in bash scripts

$*  expand to the value of all the positional parameters combined
$@  expands to the number of positional parameters. 
$0  contains the path to the currently running script or to the shell itself if no script is being executed.

$$  contains the process identification number (PID) of the current process, 
$?  is set to the exit code of the last executed command, 
$_  is set to the last argument to that command. 

$!  contains the PID of the last command executed in the background, 

$- is set to the options flag currently in effect.

----------------------------------------------------------------------------------------

Execute Pipe and pass the result to a variable.


let my_var=$(command_1 | command_2 | command_3)
let my_var=`command_1 | command_2 | command_3`
example:

let file_size=$(ls -l $i | tr -s " " | cut -f5 -d " ")
let file_size=`ls -l $i | tr -s " " | cut -f5 -d " " `

----------------------------------------------------------------------------------------

Escape sequences are single letters preceded by a backslash:

    \a: : Alert (bell)

    \b: Backspace

    \e: Escape character

    \f: Form feed

    \n: Newline

    \r: Carriage return

    \t: Horizontal tab

    \v: Vertical tab

    \\: Backslash

    \nnn: A character specified by one to three octal digits

    \xHH: A character specified by one or two hexadecimal digits

    